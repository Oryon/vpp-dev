/*
 * Copyright (c) 2018 Cisco and/or its affiliates.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** \file
    This file defines SRLB Load-Balancing API messages.
*/

option version = "1.0.0";

/** \brief Queries SRLB LB global parameters.
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
*/
define srlb_lb_get_conf
{
  u32 client_index;
  u32 context;
};

/** \brief Reply for srlb_lb_get_conf query.
    @param context - sender context, to match reply w/ request
    @param retval - returned status
    @param flow_active_timeout - Time in seconds a flow is kept in the 
                                 flow table.
    @param flow_teardown_timeout - Time in seconds a flow is kept in the
                                 flow table when a flow termination packet
                                 has been seen.
    @param flowhash_fixed_entries - Number of fixed-entries in the flow table.
    @param flowhash_collision_buckets - Number of collision entries in the 
                                        flow table.
*/
define srlb_lb_get_conf_reply
{
  u32 context;
  i32 retval;
  u32 flow_active_timeout;
  u32 flow_teardown_timeout;
  u32 flowhash_fixed_entries;
  u32 flowhash_collision_buckets;
};

/** \brief Configure SRLB LB global parameters.
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
    @param flow_active_timeout - Time in seconds a flow is kept in the 
                                 flow table.
    @param flow_teardown_timeout - Time in seconds a flow is kept in the
                                 flow table when a flow termination packet
                                 has been seen.
    @param flowhash_fixed_entries - Number of fixed-entries in the flow table.
    @param flowhash_collision_buckets - Number of collision entries in the 
                                        flow table.
*/
autoreply define srlb_lb_conf
{
  u32 client_index;
  u32 context;
  u32 flow_active_timeout;
  u32 flow_teardown_timeout;
  u32 flowhash_fixed_entries;
  u32 flowhash_collision_buckets;
};

/** \brief Creates, modifies or deletes an SRLB Load-Balancing service
           identified by its Virtual IP Prefix and receive-side FIB 
           index.
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
    @param vip_address - Virtual IPv6 prefix for the configured VIP.
    @param vip_prefix_length - Virtual IPv6 prefix length 
               (in bits between 0 and 128).
    @param sr_prefix - SR prefix used by the Load-Balancer, for this VIP, 
               for communications with the Server Agent.
    @param sr_prefix_length - SR prefix length for this VIP.
               Must be set to 80 for now.
    @param consistent_hashtable_size - Size of the consistent hashing
               array. Must be a power of two.
    @param hash_type - Which fields to use for hashing.
               - 0 : 5-tuple hashing.
               - 1 : VIP address hashing
    @param client_tx_vrf_id - Client-side TX VRF id
    @param client_rx_vrf_id - Client-side RX VRF id
    @param sr_tx_vrf_id - Server-side TX VRF id
    @param sr_rx_vrf_id - Server-side RX VRF id
    @param is_del - Whether the VIP should be deleted.
*/
autoreply define srlb_lb_vip_conf
{
  u32 client_index;
  u32 context;
  u8 vip_address[16];
  u8 vip_prefix_length;
  u8 sr_prefix[16];
  u8 sr_prefix_length;
  u32 consistent_hashtable_size;
  u8 hash_type;
  u32 client_tx_vrf_id;
  u32 client_rx_vrf_id;
  u32 sr_tx_vrf_id;
  u32 sr_rx_vrf_id;
  u8 is_del;
};

/** \brief SRLB server identifier, corresponding to one instance of the
           Load-Balanced service running close to a Server-Agent.
    @param server_prefix - IPv6 SR prefix used to send SRLB packets to the
                           Server Agent responsible for this service.
    @param server_prefix_length - SR prefix length for this server.
               Must be set to 80 for now.
*/
typeonly define srlb_lb_server
{
  u8 server_prefix[16];
  u8 server_prefix_length;
};

/** \brief Add/remove server instances to/from server pools.
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
    @param vip_prefix - Virtual IPv6 prefix identifying the VIP.
    @param vip_prefix_length - Virtual IPv6 prefix length 
                               (in bits between 0 and 128).
    @param client_rx_fib_index - Client-side RX VRF-id used to identify 
                                 the VIP.
    @param pool_bitmask - Bitmask representing which pools of servers
                          the listed servers should be added to, or 
                          removed from.
    @param is_del - Whether the servers should be deleted.
    @param count - Number of servers in the following list.
    @param servers - List of servers.
*/
autoreply define srlb_lb_server_add_del
{
  u32 client_index;
  u32 context;
  u8 vip_prefix[16];
  u8 vip_prefix_length;
  u32 client_rx_vrf_id;
  u32 pool_bitmask;
  u8 is_del;
  u32 count;
  vl_api_srlb_lb_server_t servers[count];
};

